import:
	com.mojang.authlib.GameProfile
	com.mojang.authlib.properties.Property
	fr.xephi.authme.events.LoginEvent
	fr.xephi.authme.events.LogoutEvent
	java.util.ArrayList
	java.util.HashMap
	java.util.UUID
	net.minecraft.server.v1_12_R1.EntityHuman
	org.bukkit.craftbukkit.v1_12_R1.block.CraftSkull
	org.bukkit.block.BlockFace
	org.bukkit.block.Skull
	org.bukkit.Bukkit
	org.bukkit.event.block.BlockBreakEvent
	org.bukkit.event.block.BlockSpreadEvent
	org.bukkit.event.entity.EntityPortalEvent
	org.bukkit.Material
	org.bukkit.scoreboard.ScoreboardManager
	org.bukkit.scoreboard.Team$Option as Option
	org.bukkit.scoreboard.Team$OptionStatus as OptionStatus
	org.bukkit.Server
	org.bukkit.SkullType

on join:
	loop ...({BOSS}.values()):
		set {_boss} to loop-value
		if {_boss} is instance of ArrayList:
			set {_boss} to {_boss}.get(0)
		(metadata "targets" of {_boss}).containsKey(name of event-player) is true
		(metadata "bossbar" of {_boss}).addPlayer((event-player).getHandle())
	set {_entryStr} to "%(event-player).getUniqueId()%"
	{globalTeam}.hasEntry({_entryStr}) is false
	try {globalTeam}.addEntry({_entryStr})

on server list ping:
	set the motd to "&a欢迎来到&6泰拉瑞亚§%a random integer between 2 and 9%R§%a random integer between 2 and 9%P§%a random integer between 2 and 9%G&a!"
on papi placeholder request with prefix "skript":
	set {_plyName} to name of event-player
	# glitch happens if variables between different players are not distinguished
	if the identifier is "money":
		if event-player's money < 100:
			set {_result%{_plyName}%} to "笑死，身无分文"
		else:
			set {_result%{_plyName}%} to ""
			set {_stackSize%{_plyName}%::*} to coinConversion(floor((event-player)'s money / 100))
			if {_stackSize%{_plyName}%::1} > 0:
				set {_result%{_plyName}%} to "&f%{_stackSize%{_plyName}%::1}%铂金币 "
			if {_stackSize%{_plyName}%::2} > 0:
				set {_result%{_plyName}%} to "%{_result%{_plyName}%}%&e%{_stackSize%{_plyName}%::2}%金币 "
			if {_stackSize%{_plyName}%::3} > 0:
				set {_result%{_plyName}%} to "%{_result%{_plyName}%}%&7%{_stackSize%{_plyName}%::3}%银币 "
			if {_stackSize%{_plyName}%::4} > 0:
				set {_result%{_plyName}%} to "%{_result%{_plyName}%}%&c%{_stackSize%{_plyName}%::4}%铜币 "
		set placeholder result to "%{_result%{_plyName}%}%"
	else:
		set {_attrMap%{_plyName}%} to metadata "attrMap" of event-player
		if the identifier is "defence":
			set {_result_defence_%{_plyName}%} to round(({_attrMap%{_plyName}%}.get("defence")) * ({_attrMap%{_plyName}%}.get("defenceMulti")))
			set placeholder result to "%{_result_defence_%{_plyName}%}%"
		else if the identifier is "max_mana":
			set {_result_maxmana_%{_plyName}%} to {_attrMap%{_plyName}%}.get("maxMana")
			set placeholder result to "%{_result_maxmana_%{_plyName}%}%"
		else if the identifier is "mana_tier":
			set {_result_mana_tier_%{_plyName}%} to {_attrMap%{_plyName}%}.get("manaTier")
			set placeholder result to "%{_result_mana_tier_%{_plyName}%}%"
		else if the identifier is "health_tier":
			set {_result_healthtier_%{_plyName}%} to {_attrMap%{_plyName}%}.get("healthTier")
			set placeholder result to "%{_result_healthtier_%{_plyName}%}%"
		else if the identifier is "accessory_amount":
			set {_result_accessory_amount_%{_plyName}%} to yml value "stats.maxAccessories" from file "plugins/PlayerData/%{_plyName}%.yml"
			set placeholder result to "%{_result_accessory_amount_%{_plyName}%}%"
		else if the identifier is "health":
			if gamemode of event-player is spectator:
				set placeholder result to "0"
			else:
				set {_result_health_%{_plyName}%} to "%health of event-player%"
				set placeholder result to "%{_result_health_%{_plyName}%}%"
		else if the identifier is "max_health":
			set {_result_max_health_%{_plyName}%} to (max health of event-player) * ({_attrMap%{_plyName}%}.getOrDefault("maxHealthMulti", 1))
			set placeholder result to "%{_result_max_health_%{_plyName}%}%"
		

on script load:
	set {_sbm} to Bukkit.getServer().getScoreboardManager()
	set {_team} to try {_sbm}.getMainScoreboard().registerNewTeam("default")
	if last java error is not set:
		{_team}.setOption(Option.DEATH_MESSAGE_VISIBILITY, OptionStatus.ALWAYS)
		{_team}.setOption(Option.NAME_TAG_VISIBILITY, OptionStatus.ALWAYS)
		{_team}.setOption(Option.COLLISION_RULE, OptionStatus.NEVER)
		{_team}.setCanSeeFriendlyInvisibles(false)
		{_team}.setAllowFriendlyFire(true)
		set {globalTeam} to {_team}
	set {facing} to new ArrayList(16)
	{facing}.add("SOUTH")
	{facing}.add("NORTH")
	{facing}.add("EAST")
	{facing}.add("WEST")
	{facing}.add("NORTH_EAST")
	{facing}.add("NORTH_WEST")
	{facing}.add("SOUTH_EAST")
	{facing}.add("SOUTH_WEST")
	{facing}.add("WEST_NORTH_WEST")
	{facing}.add("NORTH_NORTH_WEST")
	{facing}.add("NORTH_NORTH_EAST")
	{facing}.add("EAST_NORTH_EAST")
	{facing}.add("EAST_SOUTH_EAST")
	{facing}.add("SOUTH_SOUTH_EAST")
	{facing}.add("SOUTH_SOUTH_WEST")
	{facing}.add("WEST_SOUTH_WEST")

on rightclick:
	if event-block is bed:
		cancel event
		if player is sneaking:
			add "bedCancelled" to scoreboard tags of player
			send "&a您的重生点已移除。若要设置出生点，请取消潜行后右键床。" to player
		else:
			remove "bedCancelled" from scoreboard tags of player
			player.setBedSpawnLocation(location of event-block, true)
			send "&a您的重生点已设置。潜行右键床来移除出生点。" to player

on place:
	if event-block is cobweb:
		cancel event
	else if event-block is ender chest:
		if mod((x-coordinate of event-block) + (z-coordinate of event-block), 2) = 0:
			event-block.setType(Material.TRAPPED_CHEST)
		else:
			event-block.setType(Material.CHEST)
command /inspection:
	trigger:
		set {_ply} to command sender
		if {_ply} is op:
			make {_ply} execute "/v"
			if {_ply} has scoreboard tag "inspector":
				remove "inspector" from scoreboard tags of {_ply}
				set gamemode of {_ply} to survival
				make {_ply} execute "/res tp zhucheng"
				broadcast "&e%name of {_ply}% joined the game"
				send "&a您已退出监察模式！请暂时&c不要讲话或移动，以免暴露！" to {_ply}
				wait ("%a random number between 60 and 100% ticks" parsed as timespan)
				make {_ply} say "awa!"
				send "&a伪装完毕！您现在可以照常进行游戏活动！" to {_ply}
				make {_ply} execute "/v"
				make {_ply} execute "/v"
			else:
				broadcast "&e%name of {_ply}% left the game"
				add "inspector" to scoreboard tags of {_ply}
				set gamemode of {_ply} to spectator
				make {_ply} execute "/speed fly 2"
				send "&a您已进入监察模式！请暂时&c不要讲话&a以免暴露！" to {_ply}
				send "&a您现在可以利用观察者模式tp到其他玩家附近观察他们的动作了！" to {_ply}
		else:
			send "Unknown command. Type ""/help"" for help." to {_ply}
on EntityPortalEvent:
	cancel event
on teleport:
	player doesn't have scoreboard tag "canFreelyTeleport"
	gamemode of player is spectator
	if player has scoreboard tag "inspector":
		set {_loc} to location of player
		set {_targetLoc} to event.getTo()
		y-coordinate of {_targetLoc} > -10
		if "%world of {_loc}%" is not "%world of {_targetLoc}%":
			set {_pos} to {_targetLoc}.clone()
			set y-coordinate of {_pos} to -20
			add "canFreelyTeleport" to scoreboard tags of player
			teleport player to {_pos}
			remove "canFreelyTeleport" from scoreboard tags of player
			cancel event
			wait 2 tick
			set gamemode of player to spectator
			wait 3 tick
			teleport player to {_targetLoc}
	else:
		cancel event

on weather change to thunder:
	cancel event
on chunk generate:
	set {_chunk} to event.getChunk()
	loop 8 times:
		set {_loc} to location(({_chunk}.getX() * 16 + a random number between 0 and 15), (a random number between 0 and 30), ({_chunk}.getZ() * 16 + a random number between 0 and 15), {_chunk}.getWorld())
		if "%(block at {_loc}).getType()%" is "STONE":
			set block at {_loc} to emerald ore

on LogoutEvent:
	add "unauthorized" to scoreboard tags of player
on LoginEvent:
	remove "unauthorized" from scoreboard tags of player
	threadThrustRegen(player)
	threadAccessory(player)
	wait 1 second
	threadRegen(player)
	send "&a登录成功~请加群681552180并下载材质包以获得最佳体验~" to player
	send "&a可阅读服务器介绍了解更多信息:<url:https://www.bilibili.com/read/cv12215037>https://www.bilibili.com/read/cv12215037" to player
	make player say "."

command /convertMoney:
	cooldown: 1 minute
	cooldown message: 你在 %remaining time% 后才可以再次使用此功能！
	trigger:
		set {_ply} to command sender
		if {_ply}'s money < 100:
			send "&c你已经没钱了！" to {_ply}
			stop trigger
		set {_money::*} to coinConversion(floor({_ply}'s money / 100))
		set {_ply}'s money to mod({_ply}'s money, 100)
		if {_money::1} > 0:
			give getItem("铂金币:%{_money::1}%") to {_ply}
		if {_money::2} > 0:
			give getItem("金币:%{_money::2}%") to {_ply}
		if {_money::3} > 0:
			give getItem("银币:%{_money::3}%") to {_ply}
		if {_money::4} > 0:
			give getItem("铜币:%{_money::4}%") to {_ply}
		send "&a你已成功将钱转为实体货币！需要使用时可找NPC售出实体货币。" to {_ply}


on chat:
	if player has metadata "wormHole":
		set {_tpPlayer} to message parsed as player
		{_tpPlayer} is set
		if {_tpPlayer} is player:
			message "&c您不能给自己发送传送请求哦！"
			cancel event
			stop trigger
		else:
			send "&6>&b>&a>&r玩家 [%player%] 想要TP到你所在的位置。输入<suggest command:同意传送 ><tooltip:点这里，补全玩家名后发送>&a同意传送 玩家名<reset>&r让他传送到你所在的位置。" to {_tpPlayer}
			message "&6>&b>&a>&r传送请求已发送。请等待玩家接受。"
			clear metadata "wormHole" of player
			set {_key} to a random number between 0 and 100
			set metadata "tpRequest_%player%" of {_tpPlayer} to {_key}
			cancel event
			wait 1 minute
			set {_keyNew} to metadata "tpRequest_%player%" of {_tpPlayer}
			{_keyNew} = {_key}
			clear metadata "tpRequest_%player%" of {_tpPlayer}
			send "&c您一分钟内没有接受来自玩家 [&r%player%&c] 的传送请求。请求已过期。" to {_tpPlayer}
			stop trigger
	else if message starts with "同意传送 ":
		set {_name} to message
		replace first "同意传送 " in {_name} with ""
		set {_tpPlayer} to {_name} parsed as player
		if {_tpPlayer} is set:
			player has metadata "tpRequest_%{_tpPlayer}%"
			clear metadata "tpRequest_%{_tpPlayer}%" of player
			message "&a成功同意传送。"
			send "&a成功传送至玩家 [&r%player%&a] 所在的位置。" to {_tpPlayer}
			teleport {_tpPlayer} to player
		cancel event
		stop trigger
	set chat format to "<[player]> [message]"
on toggle sprint:
	set hunger of player to 0
on build:
	wait 1 tick
	event-block is mycelium block
	set biome at location of event-block to mushroom island
on BlockSpreadEvent:
	wait 1 tick
	set {_block} to event.getBlock()
	if {_block} is mycelium block:
		set biome at location of {_block} to mushroom island
	else if {_block} is grass:
		if chance of 0.025:
			"%biome at location of {_block}%" contains "jungle"
			y-coordinate of {_block} is between 5 and 50
			set {_skull} to the block 1 above {_block}
			{_skull} is air
			{_skull}.setType(Material.SKULL, false)
			{_skull}.setData((1).byteValue())
			set {_skull} to {_skull}.getState()
			{_skull}.[Skull]setRotation(BlockFace.valueOf({facing}.get(a random integer between 0 and ({facing}.size() - 1))))
			{_skull}.setSkullType(SkullType.PLAYER)
			if chance of 0.9:
				set {_uuid} to UUID.fromString("81834b91-513d-450f-b920-6880fd47c997")
				set {_texture} to "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZmNiNmU2YTg5NTJmNDlhNTRlZThjY2RhMzQzOGExNjlmNjU3OGZmZDY5NjhmYTA0Y2FhYjYyOGE5NTllZTFlMSJ9fX0="
			else:
				set {_uuid} to UUID.fromString("50af25ef-adb9-44d0-880f-6890ea0dc182")
				set {_texture} to "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvNTVkODk0MzFkMTRiZmVmMjA2MDQ2MWI0YTM1NjU2MTRkYzUxMTE1YzAwMWZhZTI1MDhlODY4NGJjMGFlNmE4MCJ9fX0="
			set {_profile} to new GameProfile({_uuid}, {_null})
			{_profile}.getProperties().put("textures", new Property("textures", {_texture}))
			set {_skull}.profile to {_profile}
			{_skull}.update()
on crop growth:
	"%event-block%" is "pumpkin stem"
	set {_blockLoc} to location of event-block
	set event-block to air
	wait 1 tick
	set the block at {_blockLoc} to pumpkin
	set the block 1 below {_blockLoc} to dirt
on flow:
	set {_targetBlock} to event.getToBlock()
	if "%{_targetBlock}%" is "SKULL":
		set {_ply} to a random player out of all players in world of {_targetBlock}
		set {_breakEvent} to new BlockBreakEvent({_targetBlock}, {_ply})
		Bukkit.getPluginManager().callEvent({_breakEvent})
		cancel event
on bucket empty:
	set {_targetBlock} to block at location of event-block
	if "%{_targetBlock}%" is "SKULL":
		set {_ply} to a random player out of all players in world of {_targetBlock}
		set {_breakEvent} to new BlockBreakEvent({_targetBlock}, {_ply})
		Bukkit.getPluginManager().callEvent({_breakEvent})
		cancel event

on quit:
	close player's inventory
	saveInventories(player)
	if player has scoreboard tag "inspector":
		remove "inspector" from scoreboard tags of player
		broadcast "&e%name of player% joined the game"
on skript stop:
	loop all players:
		close (loop-player)'s inventory
		saveInventories(loop-player)