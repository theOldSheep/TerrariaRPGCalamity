# 匹配界面名,hud为自动开启
# GuiInventory可以替换背包
# GuiIngameMenu可以替换ESC
# 或者直接填写箱子界面名称，即可替换箱子界面(颜色符号需写为§)
# PS：当你打开任意界面时，客户端的log内会提示本次打开的界面名哦
match: "商店"
hideHud:
  - "hud_hotbar"
  - "hud_potion"
allowEscClose: true
interactHud: true # 可以看到血量/魔力提示

Functions:
  # 通过判断按键，异步执行下面的这个【延时关闭界面】，它会延时100毫秒后才关闭，延时的这段时间是用来做背包的关闭动画的
  # 判断的格式是  (条件)?{达成执行;}:{否则执行;};  如果没有否则执行  可以用0代替 写成 (条件)?{达成执行;}:0;
  # || 是或的意思，也就是说当 当前的按键为 E或ESC,就关闭界面   && 则是且的意思
  keyPress: "(方法.取当前按下键=='E' || 方法.取当前按下键=='ESCAPE')?{方法.关闭界面;}:0"

  # 由于功能完全是在客户端实现的，所以客户端并不能直接知道变量的值，我们需要通过【方法.更新变量值】来向服务端同步变量值到客户端内
  # 文本内容需要用 ''包裹,不然mod无法识别这条公式
  update_variables: |-
    方法.更新变量值('terraria_defence','terraria_accessory_amount');
    方法.延时(1000);
    方法.异步执行方法('update_variables');
  
  update_variable_money: |-
    方法.更新变量值('terraria_money');
    方法.延时(200);
    方法.异步执行方法('update_variable_money');

  open: |-
    方法.异步执行方法('update_variables');
    方法.设置变量值('GUI_subinv_slot_amount', '54');
    方法.设置变量值('GUI_subinv_title', 方法.合并文本('商店<n><n>存款<n>', 方法.取变量("terraria_money")));
  
  preRender: |-
    方法.设置变量值('label_scale', 方法.取屏幕宽度() / 方法.取变量('adjusted_scr_size'));

    方法.设置变量值('subinv_slot_size', 方法.取屏幕宽度() * 14 / 方法.取变量('adjusted_scr_size'));
    方法.设置变量值('subinv_slot_offset', 方法.取变量('subinv_slot_size') * 8 / 7);
    方法.设置变量值('subinv_x', 方法.取屏幕宽度() * 26 / 方法.取变量('adjusted_scr_size'));
    方法.设置变量值('subinv_y', 方法.取屏幕宽度() * 82 / 方法.取变量('adjusted_scr_size'));

    方法.设置变量值('slot_size', 方法.取屏幕宽度() * 16 / 方法.取变量('adjusted_scr_size'));
    方法.设置变量值('slot_offset', 方法.取变量('slot_size') * 9 / 8);
    方法.设置变量值('acc_x', 方法.取屏幕宽度() - 方法.取变量('slot_size') * 2);
    方法.设置变量值('acc_y', 方法.取屏幕高度() - 方法.取变量('slot_offset') * 5.5);
    方法.设置变量值('acc_label_y', 方法.取变量('acc_y') - 方法.取变量('slot_size') * 5 / 8);
    方法.设置变量值('inv_x', 方法.取变量('slot_size') / 2);
    方法.设置变量值('inv_y', 方法.取变量('slot_size') * 5 / 8);

# 基础背包内容
import:
  - "inventory_slots_inventory_open"
  - "inventory_slots_sub_inventory"