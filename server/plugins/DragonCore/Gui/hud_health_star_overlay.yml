match: "hud"
priority: 2
updateInterval: 100

Functions:
  open:  |-
    方法.异步执行方法('更新hud变量');
  # 设置玩家显示的血量
  preRender: |-
    界面变量.playerHealth = 方法.玩家是否飞行() ? 0 : 方法.玩家血量();
    界面变量.star_size = 方法.取屏幕宽度() * 12 / 方法.取变量('adjusted_scr_size');
    界面变量.star_stack_offset = 界面变量.star_size * 2 / 3;
    界面变量.star_x = 方法.取屏幕宽度() - 界面变量.star_size * 3 / 4;
    界面变量.star_y = 界面变量.star_size * 3 / 2;
    界面变量.health_size = 界面变量.star_size;
    界面变量.health_x = 方法.取屏幕宽度() - 界面变量.health_size * 10 - 界面变量.star_size;
    界面变量.health_y = 界面变量.health_size;
    界面变量.health_tier = 方法.到整数(方法.取变量('terraria_health_tier'));
    界面变量.energy_shielding_alpha = 0.65 + (0.15 * 方法.sin(方法.取当前时间() * 0.00628));
  更新hud变量: |-
    方法.更新变量值('terraria_energy_shield');
    方法.延时(100);
    方法.异步执行方法('更新hud变量');


# star
star0_texture:
  x: "界面变量.star_x - (方法.取组件值('star0_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 0) - (方法.取组件值('star0_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 0, 0), 1)"
  height: "方法.取组件值('star0_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star1_texture:
  x: "界面变量.star_x - (方法.取组件值('star1_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 1) - (方法.取组件值('star1_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 1, 0), 1)"
  height: "方法.取组件值('star1_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star2_texture:
  x: "界面变量.star_x - (方法.取组件值('star2_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 2) - (方法.取组件值('star2_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 2, 0), 1)"
  height: "方法.取组件值('star2_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star3_texture:
  x: "界面变量.star_x - (方法.取组件值('star3_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 3) - (方法.取组件值('star3_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 3, 0), 1)"
  height: "方法.取组件值('star3_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star4_texture:
  x: "界面变量.star_x - (方法.取组件值('star4_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 4) - (方法.取组件值('star4_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 4, 0), 1)"
  height: "方法.取组件值('star4_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star5_texture:
  x: "界面变量.star_x - (方法.取组件值('star5_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 5) - (方法.取组件值('star5_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 5, 0), 1)"
  height: "方法.取组件值('star5_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star6_texture:
  x: "界面变量.star_x - (方法.取组件值('star6_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 6) - (方法.取组件值('star6_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 6, 0), 1)"
  height: "方法.取组件值('star6_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star7_texture:
  x: "界面变量.star_x - (方法.取组件值('star7_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 7) - (方法.取组件值('star7_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 7, 0), 1)"
  height: "方法.取组件值('star7_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star8_texture:
  x: "界面变量.star_x - (方法.取组件值('star8_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 8) - (方法.取组件值('star8_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 8, 0), 1)"
  height: "方法.取组件值('star8_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star9_texture:
  x: "界面变量.star_x - (方法.取组件值('star9_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 9) - (方法.取组件值('star9_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 9, 0), 1)"
  height: "方法.取组件值('star9_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star10_texture:
  x: "界面变量.star_x - (方法.取组件值('star10_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 10) - (方法.取组件值('star10_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 10, 0), 1)"
  height: "方法.取组件值('star10_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star11_texture:
  x: "界面变量.star_x - (方法.取组件值('star11_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 11) - (方法.取组件值('star11_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 11, 0), 1)"
  height: "方法.取组件值('star11_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star12_texture:
  x: "界面变量.star_x - (方法.取组件值('star12_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 12) - (方法.取组件值('star12_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 12, 0), 1)"
  height: "方法.取组件值('star12_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star13_texture:
  x: "界面变量.star_x - (方法.取组件值('star13_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 13) - (方法.取组件值('star13_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 13, 0), 1)"
  height: "方法.取组件值('star13_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star14_texture:
  x: "界面变量.star_x - (方法.取组件值('star14_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 14) - (方法.取组件值('star14_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 14, 0), 1)"
  height: "方法.取组件值('star14_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star15_texture:
  x: "界面变量.star_x - (方法.取组件值('star15_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 15) - (方法.取组件值('star15_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 15, 0), 1)"
  height: "方法.取组件值('star15_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star16_texture:
  x: "界面变量.star_x - (方法.取组件值('star16_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 16) - (方法.取组件值('star16_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 16, 0), 1)"
  height: "方法.取组件值('star16_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star17_texture:
  x: "界面变量.star_x - (方法.取组件值('star17_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 17) - (方法.取组件值('star17_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 17, 0), 1)"
  height: "方法.取组件值('star17_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star18_texture:
  x: "界面变量.star_x - (方法.取组件值('star18_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 18) - (方法.取组件值('star18_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 18, 0), 1)"
  height: "方法.取组件值('star18_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star19_texture:
  x: "界面变量.star_x - (方法.取组件值('star19_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 19) - (方法.取组件值('star19_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 19, 0), 1)"
  height: "方法.取组件值('star19_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star20_texture:
  x: "界面变量.star_x - (方法.取组件值('star20_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 20) - (方法.取组件值('star20_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 20, 0), 1)"
  height: "方法.取组件值('star20_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star21_texture:
  x: "界面变量.star_x - (方法.取组件值('star21_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 21) - (方法.取组件值('star21_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 21, 0), 1)"
  height: "方法.取组件值('star21_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star22_texture:
  x: "界面变量.star_x - (方法.取组件值('star22_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 22) - (方法.取组件值('star22_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 22, 0), 1)"
  height: "方法.取组件值('star22_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star23_texture:
  x: "界面变量.star_x - (方法.取组件值('star23_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 23) - (方法.取组件值('star23_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 23, 0), 1)"
  height: "方法.取组件值('star23_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star24_texture:
  x: "界面变量.star_x - (方法.取组件值('star24_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 24) - (方法.取组件值('star24_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 24, 0), 1)"
  height: "方法.取组件值('star24_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star25_texture:
  x: "界面变量.star_x - (方法.取组件值('star25_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 25) - (方法.取组件值('star25_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 25, 0), 1)"
  height: "方法.取组件值('star25_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star26_texture:
  x: "界面变量.star_x - (方法.取组件值('star26_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 26) - (方法.取组件值('star26_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 26, 0), 1)"
  height: "方法.取组件值('star26_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star27_texture:
  x: "界面变量.star_x - (方法.取组件值('star27_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 27) - (方法.取组件值('star27_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 27, 0), 1)"
  height: "方法.取组件值('star27_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star28_texture:
  x: "界面变量.star_x - (方法.取组件值('star28_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 28) - (方法.取组件值('star28_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 28, 0), 1)"
  height: "方法.取组件值('star28_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star29_texture:
  x: "界面变量.star_x - (方法.取组件值('star29_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 29) - (方法.取组件值('star29_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 29, 0), 1)"
  height: "方法.取组件值('star29_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star30_texture:
  x: "界面变量.star_x - (方法.取组件值('star30_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 30) - (方法.取组件值('star30_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 30, 0), 1)"
  height: "方法.取组件值('star30_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star31_texture:
  x: "界面变量.star_x - (方法.取组件值('star31_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 31) - (方法.取组件值('star31_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 31, 0), 1)"
  height: "方法.取组件值('star31_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star32_texture:
  x: "界面变量.star_x - (方法.取组件值('star32_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 32) - (方法.取组件值('star32_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 32, 0), 1)"
  height: "方法.取组件值('star32_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star33_texture:
  x: "界面变量.star_x - (方法.取组件值('star33_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 33) - (方法.取组件值('star33_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 33, 0), 1)"
  height: "方法.取组件值('star33_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"
star34_texture:
  x: "界面变量.star_x - (方法.取组件值('star34_texture','width') / 2)"
  y: "界面变量.star_y + (界面变量.star_stack_offset * 34) - (方法.取组件值('star34_texture','width') / 2)"
  width: "界面变量.star_size * 方法.min(方法.max((方法.玩家等级() / 20) - 34, 0), 1)"
  height: "方法.取组件值('star34_texture','width')"
  texture: "(方法.到整数(方法.取变量('terraria_mana_tier')) < 11) ? 'hud/star1.png' : (方法.合并文本('hud/star', 方法.到整数(方法.取变量('terraria_mana_tier') - 9), '.png'))"

# heart
heart0_texture:
  visible: "(界面变量.health_tier >= 1) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 0) - (方法.取组件值('heart0_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart0_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 0, 0), 1)"
  height: "方法.取组件值('heart0_texture','width')"
  texture: "(界面变量.health_tier <= 20) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart1_texture:
  visible: "(界面变量.health_tier >= 2) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 1) - (方法.取组件值('heart1_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart1_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 1, 0), 1)"
  height: "方法.取组件值('heart1_texture','width')"
  texture: "(界面变量.health_tier <= 21) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart2_texture:
  visible: "(界面变量.health_tier >= 3) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 2) - (方法.取组件值('heart2_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart2_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 2, 0), 1)"
  height: "方法.取组件值('heart2_texture','width')"
  texture: "(界面变量.health_tier <= 22) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart3_texture:
  visible: "(界面变量.health_tier >= 4) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 3) - (方法.取组件值('heart3_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart3_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 3, 0), 1)"
  height: "方法.取组件值('heart3_texture','width')"
  texture: "(界面变量.health_tier <= 23) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart4_texture:
  visible: "(界面变量.health_tier >= 5) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 4) - (方法.取组件值('heart4_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart4_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 4, 0), 1)"
  height: "方法.取组件值('heart4_texture','width')"
  texture: "(界面变量.health_tier <= 24) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart5_texture:
  visible: "(界面变量.health_tier >= 6) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 5) - (方法.取组件值('heart5_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart5_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 5, 0), 1)"
  height: "方法.取组件值('heart5_texture','width')"
  texture: "(界面变量.health_tier <= 25) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart6_texture:
  visible: "(界面变量.health_tier >= 7) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 6) - (方法.取组件值('heart6_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart6_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 6, 0), 1)"
  height: "方法.取组件值('heart6_texture','width')"
  texture: "(界面变量.health_tier <= 26) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart7_texture:
  visible: "(界面变量.health_tier >= 8) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 7) - (方法.取组件值('heart7_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart7_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 7, 0), 1)"
  height: "方法.取组件值('heart7_texture','width')"
  texture: "(界面变量.health_tier <= 27) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart8_texture:
  visible: "(界面变量.health_tier >= 9) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 8) - (方法.取组件值('heart8_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart8_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 8, 0), 1)"
  height: "方法.取组件值('heart8_texture','width')"
  texture: "(界面变量.health_tier <= 28) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart9_texture:
  visible: "(界面变量.health_tier >= 10) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 9) - (方法.取组件值('heart9_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (方法.取组件值('heart9_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 9, 0), 1)"
  height: "方法.取组件值('heart9_texture','width')"
  texture: "(界面变量.health_tier <= 29) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart10_texture:
  visible: "(界面变量.health_tier >= 11) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 0) - (方法.取组件值('heart10_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart10_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 10, 0), 1)"
  height: "方法.取组件值('heart10_texture','width')"
  texture: "(界面变量.health_tier <= 30) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart11_texture:
  visible: "(界面变量.health_tier >= 12) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 1) - (方法.取组件值('heart11_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart11_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 11, 0), 1)"
  height: "方法.取组件值('heart11_texture','width')"
  texture: "(界面变量.health_tier <= 31) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart12_texture:
  visible: "(界面变量.health_tier >= 13) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 2) - (方法.取组件值('heart12_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart12_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 12, 0), 1)"
  height: "方法.取组件值('heart12_texture','width')"
  texture: "(界面变量.health_tier <= 32) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart13_texture:
  visible: "(界面变量.health_tier >= 14) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 3) - (方法.取组件值('heart13_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart13_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 13, 0), 1)"
  height: "方法.取组件值('heart13_texture','width')"
  texture: "(界面变量.health_tier <= 33) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart14_texture:
  visible: "(界面变量.health_tier >= 15) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 4) - (方法.取组件值('heart14_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart14_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 14, 0), 1)"
  height: "方法.取组件值('heart14_texture','width')"
  texture: "(界面变量.health_tier <= 34) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart15_texture:
  visible: "(界面变量.health_tier >= 16) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 5) - (方法.取组件值('heart15_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart15_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 15, 0), 1)"
  height: "方法.取组件值('heart15_texture','width')"
  texture: "(界面变量.health_tier <= 35) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart16_texture:
  visible: "(界面变量.health_tier >= 17) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 6) - (方法.取组件值('heart16_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart16_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 16, 0), 1)"
  height: "方法.取组件值('heart16_texture','width')"
  texture: "(界面变量.health_tier <= 36) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart17_texture:
  visible: "(界面变量.health_tier >= 18) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 7) - (方法.取组件值('heart17_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart17_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 17, 0), 1)"
  height: "方法.取组件值('heart17_texture','width')"
  texture: "(界面变量.health_tier <= 37) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart18_texture:
  visible: "(界面变量.health_tier >= 19) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 8) - (方法.取组件值('heart18_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart18_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 18, 0), 1)"
  height: "方法.取组件值('heart18_texture','width')"
  texture: "(界面变量.health_tier <= 38) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"
heart19_texture:
  visible: "(界面变量.health_tier >= 20) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 9) - (方法.取组件值('heart19_texture','width') / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (方法.取组件值('heart19_texture','width') / 2)"
  width: "界面变量.health_size * 方法.min(方法.max((界面变量.playerHealth / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 19, 0), 1)"
  height: "方法.取组件值('heart19_texture','width')"
  texture: "(界面变量.health_tier <= 39) ? 'hud/heart1.png' : ((界面变量.health_tier <= 40) ? 'hud/heart2.png' : 方法.合并文本('hud/heart', 方法.到整数(方法.取变量('terraria_health_tier') - (40 - 2)), '.png'))"

# barrier
barrier0_texture:
  visible: "(界面变量.health_tier >= 1) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 0, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier1_texture:
  visible: "(界面变量.health_tier >= 2) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 1, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier2_texture:
  visible: "(界面变量.health_tier >= 3) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 2) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 2, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier3_texture:
  visible: "(界面变量.health_tier >= 4) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 3) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 3, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier4_texture:
  visible: "(界面变量.health_tier >= 5) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 4) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 4, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier5_texture:
  visible: "(界面变量.health_tier >= 6) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 5) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 5, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier6_texture:
  visible: "(界面变量.health_tier >= 7) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 6) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 6, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier7_texture:
  visible: "(界面变量.health_tier >= 8) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 7) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 7, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier8_texture:
  visible: "(界面变量.health_tier >= 9) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 8) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 8, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier9_texture:
  visible: "(界面变量.health_tier >= 10) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 9) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 9, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier10_texture:
  visible: "(界面变量.health_tier >= 11) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 0) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 10, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier11_texture:
  visible: "(界面变量.health_tier >= 12) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 11, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier12_texture:
  visible: "(界面变量.health_tier >= 13) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 2) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 12, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier13_texture:
  visible: "(界面变量.health_tier >= 14) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 3) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 13, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier14_texture:
  visible: "(界面变量.health_tier >= 15) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 4) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 14, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier15_texture:
  visible: "(界面变量.health_tier >= 16) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 5) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 15, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier16_texture:
  visible: "(界面变量.health_tier >= 17) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 6) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 16, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier17_texture:
  visible: "(界面变量.health_tier >= 18) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 7) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 17, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier18_texture:
  visible: "(界面变量.health_tier >= 19) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 8) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 18, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
barrier19_texture:
  visible: "(界面变量.health_tier >= 20) ? 'true' : 'false'"
  x: "界面变量.health_x + (界面变量.health_size * 9) - (界面变量.health_size / 2)"
  y: "界面变量.health_y + (界面变量.health_size * 1) - (界面变量.health_size / 2)"
  textureWidth: "界面变量.health_size"
  textureHeight: "界面变量.health_size"
  width: "界面变量.health_size * 方法.min(方法.max((方法.取变量('terraria_energy_shield') / 方法.玩家最大血量()) * 方法.min(方法.取变量('terraria_health_tier'), 20) - 19, 0), 1)"
  height: "界面变量.health_size"
  texture: "'hud/heart_shielding.png'"
  alpha: "界面变量.energy_shielding_alpha"
